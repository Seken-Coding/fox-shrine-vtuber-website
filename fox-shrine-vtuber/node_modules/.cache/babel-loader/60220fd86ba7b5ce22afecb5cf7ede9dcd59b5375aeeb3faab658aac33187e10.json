{"ast":null,"code":"import _objectSpread from\"X:/GitHub-Repo/fox-shrine-vtuber-website/fox-shrine-vtuber/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect,useCallback}from'react';// Create Context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const ConfigContext=/*#__PURE__*/createContext();// Default configuration fallback\nconst defaultConfig={siteTitle:'Fox Shrine VTuber',siteDescription:'Join the Fox Shrine for games, laughs, and shrine fox adventures!',siteLogo:'/images/fox-shrine-logo.png',siteUrl:'https://foxshrinevtuber.com',character:{name:'Fox Shrine Guardian',description:'A mischievous fox spirit who guards an ancient shrine and streams for fun!',image:'/images/fox-character.png',greeting:'Welcome to my shrine, fellow foxes! 🦊'},social:{twitchUrl:'https://twitch.tv/foxshrinevtuber',youtubeUrl:'https://youtube.com/@foxshrinevtuber',twitterUrl:'https://twitter.com/foxshrinevtuber',discordUrl:'https://discord.gg/foxshrine',instagramUrl:'https://instagram.com/foxshrinevtuber'},stream:{title:'Fox Friday Funtime!',category:'Just Chatting',isLive:false,nextStreamDate:'2025-09-15T21:00:00Z',notification:'Join me tonight for some cozy games! 🎮'},theme:{primaryColor:'#C41E3A',secondaryColor:'#FF9500',accentColor:'#5FB4A2',backgroundColor:'#F5F1E8',fontFamily:'Cinzel, serif'},features:{showMerch:true,showDonations:true,showSchedule:true,showLatestVideos:true,enableNotifications:true},content:{heroTitle:'Welcome to the Fox Shrine',heroSubtitle:'Join me on a magical journey filled with laughter, games, and shrine fox mischief!',aboutText:'Legend has it that I was once a regular fox who stumbled upon an abandoned shrine deep in the mystical forest.'},contact:{businessEmail:'business@foxshrinevtuber.com',fanEmail:'fanart@foxshrinevtuber.com',supportEmail:'support@foxshrinevtuber.com'},system:{maintenanceMode:false,maintenanceMessage:'The shrine is currently under magical maintenance! Please check back soon! 🦊✨',emergencyNotice:''}};// Configuration Provider Component\nexport const ConfigProvider=_ref=>{let{children}=_ref;const[config,setConfig]=useState(defaultConfig);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[lastSync,setLastSync]=useState(null);const[isOnline,setIsOnline]=useState(navigator.onLine);const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:3002/api';// Network status monitoring\nuseEffect(()=>{const handleOnline=()=>setIsOnline(true);const handleOffline=()=>setIsOnline(false);window.addEventListener('online',handleOnline);window.addEventListener('offline',handleOffline);return()=>{window.removeEventListener('online',handleOnline);window.removeEventListener('offline',handleOffline);};},[]);// Load configuration from API\nconst loadConfigFromDatabase=useCallback(async()=>{try{setError(null);const response=await fetch(\"\".concat(API_BASE_URL,\"/config\"),{method:'GET',headers:{'Content-Type':'application/json'},// Add timeout\nsignal:AbortSignal.timeout(10000)});if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const result=await response.json();if(result.success&&result.data){// Merge with default config to ensure all properties exist\nconst mergedConfig=mergeDeep(defaultConfig,result.data);setConfig(mergedConfig);setLastSync(new Date());// Save to localStorage as backup\nlocalStorage.setItem('foxshrine_config',JSON.stringify(mergedConfig));localStorage.setItem('foxshrine_config_timestamp',new Date().toISOString());console.log('✅ Configuration loaded from database successfully');return mergedConfig;}else{throw new Error(result.error||'Invalid response format');}}catch(error){console.error('❌ Failed to load configuration from database:',error);// Try to load from localStorage\nconst cachedConfig=localStorage.getItem('foxshrine_config');const cachedTimestamp=localStorage.getItem('foxshrine_config_timestamp');if(cachedConfig){try{const parsedConfig=JSON.parse(cachedConfig);setConfig(parsedConfig);setLastSync(new Date(cachedTimestamp));console.log('📦 Using cached configuration');setError(\"Using cached data (\".concat(error.message,\")\"));return parsedConfig;}catch(parseError){console.error('❌ Failed to parse cached configuration:',parseError);}}// Fallback to default config\nsetError(error.message);setConfig(defaultConfig);console.log('🔄 Using default configuration as fallback');return defaultConfig;}},[API_BASE_URL]);// Update configuration in database\nconst updateConfig=useCallback(async function(key,value){let category=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'general';try{setError(null);// Optimistic update\nconst keyPath=key.split('.');const newConfig=_objectSpread({},config);let current=newConfig;for(let i=0;i<keyPath.length-1;i++){if(!current[keyPath[i]]){current[keyPath[i]]={};}current=current[keyPath[i]];}current[keyPath[keyPath.length-1]]=value;setConfig(newConfig);// Send to API\nconst response=await fetch(\"\".concat(API_BASE_URL,\"/config/\").concat(key),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({value,category}),signal:AbortSignal.timeout(10000)});if(!response.ok){// Revert optimistic update on failure\nsetConfig(config);throw new Error(\"HTTP error! status: \".concat(response.status));}const result=await response.json();if(!result.success){// Revert optimistic update on failure\nsetConfig(config);throw new Error(result.error||'Update failed');}console.log(\"\\u2705 Configuration updated: \".concat(key,\" = \").concat(value));// Update localStorage\nlocalStorage.setItem('foxshrine_config',JSON.stringify(newConfig));localStorage.setItem('foxshrine_config_timestamp',new Date().toISOString());setLastSync(new Date());return result.data;}catch(error){console.error('❌ Failed to update configuration:',error);setError(error.message);// Revert optimistic update\nsetConfig(config);throw error;}},[config,API_BASE_URL]);// Bulk update configuration\nconst updateMultipleConfig=useCallback(async updates=>{try{setError(null);const response=await fetch(\"\".concat(API_BASE_URL,\"/config\"),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({configs:updates}),signal:AbortSignal.timeout(15000)});if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const result=await response.json();if(!result.success){throw new Error(result.error||'Bulk update failed');}// Reload configuration after bulk update\nawait loadConfigFromDatabase();console.log(\"\\u2705 Bulk configuration updated: \".concat(updates.length,\" items\"));return result.data;}catch(error){console.error('❌ Failed to bulk update configuration:',error);setError(error.message);throw error;}},[API_BASE_URL,loadConfigFromDatabase]);// Get stream status\nconst getStreamStatus=useCallback(async()=>{try{const response=await fetch(\"\".concat(API_BASE_URL,\"/stream/status\"),{method:'GET',headers:{'Content-Type':'application/json'},signal:AbortSignal.timeout(5000)});if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const result=await response.json();return result.success?result.data:null;}catch(error){console.error('❌ Failed to get stream status:',error);return null;}},[API_BASE_URL]);// Update stream status\nconst updateStreamStatus=useCallback(async streamData=>{try{const response=await fetch(\"\".concat(API_BASE_URL,\"/stream/status\"),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(streamData),signal:AbortSignal.timeout(10000)});if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const result=await response.json();if(result.success){// Update local stream config\nconst updatedConfig=_objectSpread({},config);if(streamData.isLive!==undefined)updatedConfig.stream.isLive=streamData.isLive;if(streamData.title)updatedConfig.stream.title=streamData.title;if(streamData.category)updatedConfig.stream.category=streamData.category;if(streamData.nextStream)updatedConfig.stream.nextStreamDate=streamData.nextStream;if(streamData.notification)updatedConfig.stream.notification=streamData.notification;setConfig(updatedConfig);localStorage.setItem('foxshrine_config',JSON.stringify(updatedConfig));}return result.success?result.data:null;}catch(error){console.error('❌ Failed to update stream status:',error);throw error;}},[config,API_BASE_URL]);// Initial load\nuseEffect(()=>{const initializeConfig=async()=>{setLoading(true);try{if(isOnline){await loadConfigFromDatabase();}else{// Load from cache when offline\nconst cachedConfig=localStorage.getItem('foxshrine_config');if(cachedConfig){const parsedConfig=JSON.parse(cachedConfig);setConfig(parsedConfig);const cachedTimestamp=localStorage.getItem('foxshrine_config_timestamp');setLastSync(new Date(cachedTimestamp));setError('Offline - using cached data');}}}catch(error){console.error('Failed to initialize config:',error);}finally{setLoading(false);}};initializeConfig();},[isOnline,loadConfigFromDatabase]);// Auto-refresh configuration every 5 minutes if online\nuseEffect(()=>{if(!isOnline)return;const interval=setInterval(()=>{loadConfigFromDatabase();},5*60*1000);// 5 minutes\nreturn()=>clearInterval(interval);},[isOnline,loadConfigFromDatabase]);// Deep merge helper function\nconst mergeDeep=(target,source)=>{const output=_objectSpread({},target);if(isObject(target)&&isObject(source)){Object.keys(source).forEach(key=>{if(isObject(source[key])){if(!(key in target)){output[key]=source[key];}else{output[key]=mergeDeep(target[key],source[key]);}}else{output[key]=source[key];}});}return output;};const isObject=item=>{return item&&typeof item==='object'&&!Array.isArray(item);};const contextValue={config,loading,error,lastSync,isOnline,updateConfig,updateMultipleConfig,refreshConfig:loadConfigFromDatabase,getStreamStatus,updateStreamStatus};return/*#__PURE__*/_jsx(ConfigContext.Provider,{value:contextValue,children:children});};// Custom hook to use configuration\nexport const useConfigDatabase=()=>{const context=useContext(ConfigContext);if(!context){throw new Error('useConfigDatabase must be used within a ConfigProvider');}return context;};export default useConfigDatabase;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","jsx","_jsx","ConfigContext","defaultConfig","siteTitle","siteDescription","siteLogo","siteUrl","character","name","description","image","greeting","social","twitchUrl","youtubeUrl","twitterUrl","discordUrl","instagramUrl","stream","title","category","isLive","nextStreamDate","notification","theme","primaryColor","secondaryColor","accentColor","backgroundColor","fontFamily","features","showMerch","showDonations","showSchedule","showLatestVideos","enableNotifications","content","heroTitle","heroSubtitle","aboutText","contact","businessEmail","fanEmail","supportEmail","system","maintenanceMode","maintenanceMessage","emergencyNotice","ConfigProvider","_ref","children","config","setConfig","loading","setLoading","error","setError","lastSync","setLastSync","isOnline","setIsOnline","navigator","onLine","API_BASE_URL","process","env","REACT_APP_API_URL","handleOnline","handleOffline","window","addEventListener","removeEventListener","loadConfigFromDatabase","response","fetch","concat","method","headers","signal","AbortSignal","timeout","ok","Error","status","result","json","success","data","mergedConfig","mergeDeep","Date","localStorage","setItem","JSON","stringify","toISOString","console","log","cachedConfig","getItem","cachedTimestamp","parsedConfig","parse","message","parseError","updateConfig","key","value","arguments","length","undefined","keyPath","split","newConfig","_objectSpread","current","i","body","updateMultipleConfig","updates","configs","getStreamStatus","updateStreamStatus","streamData","updatedConfig","nextStream","initializeConfig","interval","setInterval","clearInterval","target","source","output","isObject","Object","keys","forEach","item","Array","isArray","contextValue","refreshConfig","Provider","useConfigDatabase","context"],"sources":["X:/GitHub-Repo/fox-shrine-vtuber-website/fox-shrine-vtuber/src/hooks/useConfigDatabase.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\r\n\r\n// Create Context\r\nconst ConfigContext = createContext();\r\n\r\n// Default configuration fallback\r\nconst defaultConfig = {\r\n  siteTitle: 'Fox Shrine VTuber',\r\n  siteDescription: 'Join the Fox Shrine for games, laughs, and shrine fox adventures!',\r\n  siteLogo: '/images/fox-shrine-logo.png',\r\n  siteUrl: 'https://foxshrinevtuber.com',\r\n  \r\n  character: {\r\n    name: 'Fox Shrine Guardian',\r\n    description: 'A mischievous fox spirit who guards an ancient shrine and streams for fun!',\r\n    image: '/images/fox-character.png',\r\n    greeting: 'Welcome to my shrine, fellow foxes! 🦊'\r\n  },\r\n  \r\n  social: {\r\n    twitchUrl: 'https://twitch.tv/foxshrinevtuber',\r\n    youtubeUrl: 'https://youtube.com/@foxshrinevtuber',\r\n    twitterUrl: 'https://twitter.com/foxshrinevtuber',\r\n    discordUrl: 'https://discord.gg/foxshrine',\r\n    instagramUrl: 'https://instagram.com/foxshrinevtuber'\r\n  },\r\n  \r\n  stream: {\r\n    title: 'Fox Friday Funtime!',\r\n    category: 'Just Chatting',\r\n    isLive: false,\r\n    nextStreamDate: '2025-09-15T21:00:00Z',\r\n    notification: 'Join me tonight for some cozy games! 🎮'\r\n  },\r\n  \r\n  theme: {\r\n    primaryColor: '#C41E3A',\r\n    secondaryColor: '#FF9500',\r\n    accentColor: '#5FB4A2',\r\n    backgroundColor: '#F5F1E8',\r\n    fontFamily: 'Cinzel, serif'\r\n  },\r\n  \r\n  features: {\r\n    showMerch: true,\r\n    showDonations: true,\r\n    showSchedule: true,\r\n    showLatestVideos: true,\r\n    enableNotifications: true\r\n  },\r\n  \r\n  content: {\r\n    heroTitle: 'Welcome to the Fox Shrine',\r\n    heroSubtitle: 'Join me on a magical journey filled with laughter, games, and shrine fox mischief!',\r\n    aboutText: 'Legend has it that I was once a regular fox who stumbled upon an abandoned shrine deep in the mystical forest.'\r\n  },\r\n  \r\n  contact: {\r\n    businessEmail: 'business@foxshrinevtuber.com',\r\n    fanEmail: 'fanart@foxshrinevtuber.com',\r\n    supportEmail: 'support@foxshrinevtuber.com'\r\n  },\r\n  \r\n  system: {\r\n    maintenanceMode: false,\r\n    maintenanceMessage: 'The shrine is currently under magical maintenance! Please check back soon! 🦊✨',\r\n    emergencyNotice: ''\r\n  }\r\n};\r\n\r\n// Configuration Provider Component\r\nexport const ConfigProvider = ({ children }) => {\r\n  const [config, setConfig] = useState(defaultConfig);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [lastSync, setLastSync] = useState(null);\r\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\r\n\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3002/api';\r\n\r\n  // Network status monitoring\r\n  useEffect(() => {\r\n    const handleOnline = () => setIsOnline(true);\r\n    const handleOffline = () => setIsOnline(false);\r\n\r\n    window.addEventListener('online', handleOnline);\r\n    window.addEventListener('offline', handleOffline);\r\n\r\n    return () => {\r\n      window.removeEventListener('online', handleOnline);\r\n      window.removeEventListener('offline', handleOffline);\r\n    };\r\n  }, []);\r\n\r\n  // Load configuration from API\r\n  const loadConfigFromDatabase = useCallback(async () => {\r\n    try {\r\n      setError(null);\r\n      \r\n      const response = await fetch(`${API_BASE_URL}/config`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        // Add timeout\r\n        signal: AbortSignal.timeout(10000)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.success && result.data) {\r\n        // Merge with default config to ensure all properties exist\r\n        const mergedConfig = mergeDeep(defaultConfig, result.data);\r\n        setConfig(mergedConfig);\r\n        setLastSync(new Date());\r\n        \r\n        // Save to localStorage as backup\r\n        localStorage.setItem('foxshrine_config', JSON.stringify(mergedConfig));\r\n        localStorage.setItem('foxshrine_config_timestamp', new Date().toISOString());\r\n        \r\n        console.log('✅ Configuration loaded from database successfully');\r\n        return mergedConfig;\r\n      } else {\r\n        throw new Error(result.error || 'Invalid response format');\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Failed to load configuration from database:', error);\r\n      \r\n      // Try to load from localStorage\r\n      const cachedConfig = localStorage.getItem('foxshrine_config');\r\n      const cachedTimestamp = localStorage.getItem('foxshrine_config_timestamp');\r\n      \r\n      if (cachedConfig) {\r\n        try {\r\n          const parsedConfig = JSON.parse(cachedConfig);\r\n          setConfig(parsedConfig);\r\n          setLastSync(new Date(cachedTimestamp));\r\n          console.log('📦 Using cached configuration');\r\n          setError(`Using cached data (${error.message})`);\r\n          return parsedConfig;\r\n        } catch (parseError) {\r\n          console.error('❌ Failed to parse cached configuration:', parseError);\r\n        }\r\n      }\r\n      \r\n      // Fallback to default config\r\n      setError(error.message);\r\n      setConfig(defaultConfig);\r\n      console.log('🔄 Using default configuration as fallback');\r\n      return defaultConfig;\r\n    }\r\n  }, [API_BASE_URL]);\r\n\r\n  // Update configuration in database\r\n  const updateConfig = useCallback(async (key, value, category = 'general') => {\r\n    try {\r\n      setError(null);\r\n      \r\n      // Optimistic update\r\n      const keyPath = key.split('.');\r\n      const newConfig = { ...config };\r\n      let current = newConfig;\r\n      \r\n      for (let i = 0; i < keyPath.length - 1; i++) {\r\n        if (!current[keyPath[i]]) {\r\n          current[keyPath[i]] = {};\r\n        }\r\n        current = current[keyPath[i]];\r\n      }\r\n      current[keyPath[keyPath.length - 1]] = value;\r\n      setConfig(newConfig);\r\n\r\n      // Send to API\r\n      const response = await fetch(`${API_BASE_URL}/config/${key}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ value, category }),\r\n        signal: AbortSignal.timeout(10000)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        // Revert optimistic update on failure\r\n        setConfig(config);\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      \r\n      if (!result.success) {\r\n        // Revert optimistic update on failure\r\n        setConfig(config);\r\n        throw new Error(result.error || 'Update failed');\r\n      }\r\n\r\n      console.log(`✅ Configuration updated: ${key} = ${value}`);\r\n      \r\n      // Update localStorage\r\n      localStorage.setItem('foxshrine_config', JSON.stringify(newConfig));\r\n      localStorage.setItem('foxshrine_config_timestamp', new Date().toISOString());\r\n      \r\n      setLastSync(new Date());\r\n      return result.data;\r\n    } catch (error) {\r\n      console.error('❌ Failed to update configuration:', error);\r\n      setError(error.message);\r\n      \r\n      // Revert optimistic update\r\n      setConfig(config);\r\n      throw error;\r\n    }\r\n  }, [config, API_BASE_URL]);\r\n\r\n  // Bulk update configuration\r\n  const updateMultipleConfig = useCallback(async (updates) => {\r\n    try {\r\n      setError(null);\r\n      \r\n      const response = await fetch(`${API_BASE_URL}/config`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ configs: updates }),\r\n        signal: AbortSignal.timeout(15000)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      \r\n      if (!result.success) {\r\n        throw new Error(result.error || 'Bulk update failed');\r\n      }\r\n\r\n      // Reload configuration after bulk update\r\n      await loadConfigFromDatabase();\r\n      \r\n      console.log(`✅ Bulk configuration updated: ${updates.length} items`);\r\n      return result.data;\r\n    } catch (error) {\r\n      console.error('❌ Failed to bulk update configuration:', error);\r\n      setError(error.message);\r\n      throw error;\r\n    }\r\n  }, [API_BASE_URL, loadConfigFromDatabase]);\r\n\r\n  // Get stream status\r\n  const getStreamStatus = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/stream/status`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        signal: AbortSignal.timeout(5000)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      return result.success ? result.data : null;\r\n    } catch (error) {\r\n      console.error('❌ Failed to get stream status:', error);\r\n      return null;\r\n    }\r\n  }, [API_BASE_URL]);\r\n\r\n  // Update stream status\r\n  const updateStreamStatus = useCallback(async (streamData) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/stream/status`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(streamData),\r\n        signal: AbortSignal.timeout(10000)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        // Update local stream config\r\n        const updatedConfig = { ...config };\r\n        if (streamData.isLive !== undefined) updatedConfig.stream.isLive = streamData.isLive;\r\n        if (streamData.title) updatedConfig.stream.title = streamData.title;\r\n        if (streamData.category) updatedConfig.stream.category = streamData.category;\r\n        if (streamData.nextStream) updatedConfig.stream.nextStreamDate = streamData.nextStream;\r\n        if (streamData.notification) updatedConfig.stream.notification = streamData.notification;\r\n        \r\n        setConfig(updatedConfig);\r\n        localStorage.setItem('foxshrine_config', JSON.stringify(updatedConfig));\r\n      }\r\n      \r\n      return result.success ? result.data : null;\r\n    } catch (error) {\r\n      console.error('❌ Failed to update stream status:', error);\r\n      throw error;\r\n    }\r\n  }, [config, API_BASE_URL]);\r\n\r\n  // Initial load\r\n  useEffect(() => {\r\n    const initializeConfig = async () => {\r\n      setLoading(true);\r\n      try {\r\n        if (isOnline) {\r\n          await loadConfigFromDatabase();\r\n        } else {\r\n          // Load from cache when offline\r\n          const cachedConfig = localStorage.getItem('foxshrine_config');\r\n          if (cachedConfig) {\r\n            const parsedConfig = JSON.parse(cachedConfig);\r\n            setConfig(parsedConfig);\r\n            const cachedTimestamp = localStorage.getItem('foxshrine_config_timestamp');\r\n            setLastSync(new Date(cachedTimestamp));\r\n            setError('Offline - using cached data');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to initialize config:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeConfig();\r\n  }, [isOnline, loadConfigFromDatabase]);\r\n\r\n  // Auto-refresh configuration every 5 minutes if online\r\n  useEffect(() => {\r\n    if (!isOnline) return;\r\n\r\n    const interval = setInterval(() => {\r\n      loadConfigFromDatabase();\r\n    }, 5 * 60 * 1000); // 5 minutes\r\n\r\n    return () => clearInterval(interval);\r\n  }, [isOnline, loadConfigFromDatabase]);\r\n\r\n  // Deep merge helper function\r\n  const mergeDeep = (target, source) => {\r\n    const output = { ...target };\r\n    \r\n    if (isObject(target) && isObject(source)) {\r\n      Object.keys(source).forEach(key => {\r\n        if (isObject(source[key])) {\r\n          if (!(key in target)) {\r\n            output[key] = source[key];\r\n          } else {\r\n            output[key] = mergeDeep(target[key], source[key]);\r\n          }\r\n        } else {\r\n          output[key] = source[key];\r\n        }\r\n      });\r\n    }\r\n    \r\n    return output;\r\n  };\r\n\r\n  const isObject = (item) => {\r\n    return item && typeof item === 'object' && !Array.isArray(item);\r\n  };\r\n\r\n  const contextValue = {\r\n    config,\r\n    loading,\r\n    error,\r\n    lastSync,\r\n    isOnline,\r\n    updateConfig,\r\n    updateMultipleConfig,\r\n    refreshConfig: loadConfigFromDatabase,\r\n    getStreamStatus,\r\n    updateStreamStatus\r\n  };\r\n\r\n  return (\r\n    <ConfigContext.Provider value={contextValue}>\r\n      {children}\r\n    </ConfigContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use configuration\r\nexport const useConfigDatabase = () => {\r\n  const context = useContext(ConfigContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useConfigDatabase must be used within a ConfigProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default useConfigDatabase;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}